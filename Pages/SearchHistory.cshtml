@page
@model BookInfoFinder.Pages.SearchHistoryModel
@{
    ViewData["Title"] = "Lịch sử tìm kiếm";
}

<div class="container-fluid px-4 py-4">
    <div class="row">
        <div class="col-12">
            <!-- Page Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="text-primary mb-1">
                        <i class="bi bi-clock-history me-2"></i>Lịch sử tìm kiếm
                    </h2>
                    <p class="text-muted mb-0">Các từ khóa bạn đã tìm kiếm</p>
                </div>
                <div class="d-flex gap-2">
                    <button id="btnDeleteAll" class="btn btn-outline-danger btn-sm">
                        <i class="bi bi-trash me-1"></i>Xóa tất cả
                    </button>
                </div>
            </div>

            <!-- Search History List -->
            <div class="card shadow-sm">
                <div class="card-body">
                    <div id="historyContainer">
                        <div class="text-center py-4">
                            <div class="spinner-border spinner-border-sm text-primary me-2" role="status"></div>
                            <span class="text-muted">Đang tải lịch sử...</span>
                        </div>
                    </div>

                    <!-- Empty State -->
                    <div id="emptyState" class="text-center py-5" style="display: none;">
                        <i class="bi bi-clock-history text-muted" style="font-size: 4rem;"></i>
                        <h5 class="text-muted mt-3">Chưa có lịch sử tìm kiếm</h5>
                        <p class="text-muted">Hãy thử tìm kiếm một cuốn sách để bắt đầu!</p>
                        <a href="/" class="btn btn-primary">
                            <i class="bi bi-search me-1"></i>Tìm kiếm ngay
                        </a>
                    </div>

                    <!-- Pagination -->
                    <nav aria-label="History pagination" id="paginationContainer" class="mt-4" style="display: none;">
                        <ul class="pagination justify-content-center" id="pagination"></ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>
 
@section Scripts {
<script>
$(function () {
    let currentPage = 1;
    const pageSize = 10;

    // Toast notification function
    function showToast(message, type = 'info') {
        const toast = `
            <div class="toast align-items-center text-white bg-${type === 'error' ? 'danger' : 'success'} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">${message}</div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            </div>`;
        
        if (!$('#toastContainer').length) {
            $('body').append('<div id="toastContainer" class="toast-container position-fixed top-0 end-0 p-3"></div>');
        }
        
        const $toast = $(toast);
        $('#toastContainer').append($toast);
        const bsToast = new bootstrap.Toast($toast[0]);
        bsToast.show();
    }

    // Load search history from server
    function loadHistory(page = 1) {
        currentPage = page;
        
        $.get('/SearchHistory?handler=AjaxGet', {
            page: page,
            pageSize: pageSize
        })
        .done(function (data) {
            renderHistory(data);
        })
        .fail(function(xhr, status, error) {
            console.error('SearchHistory error:', xhr.responseText);
            showToast('Không thể tải lịch sử tìm kiếm', 'error');
            $('#historyContainer').html(`
                <div class="text-center text-danger py-4">
                    <i class="bi bi-exclamation-triangle me-2"></i>Lỗi khi tải dữ liệu
                </div>
            `);
        });
    }

    // Render history list
    function renderHistory(data) {
        const histories = data.histories || [];
        
        if (histories.length === 0) {
            $('#historyContainer').hide();
            $('#emptyState').show();
            $('#paginationContainer').hide();
            return;
        }

        $('#emptyState').hide();
        $('#historyContainer').show();

        let html = '<div class="row g-3">';
        histories.forEach(h => {
            html += `
                <div class="col-12">
                    <div class="history-item p-3 border rounded hover-shadow" data-id="${h.searchHistoryId}">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="flex-grow-1">
                                <div class="d-flex align-items-center gap-3">
                                    <div class="search-icon">
                                        <i class="bi bi-search text-primary fs-4"></i>
                                    </div>
                                    <div>
                                        <h6 class="mb-1 fw-bold text-dark">${h.searchQuery}</h6>
                                        <div class="d-flex align-items-center gap-3 text-muted small">
                                            <span>
                                                <i class="bi bi-clock me-1"></i>${h.timeAgo}
                                            </span>
                                            <span>
                                                <i class="bi bi-bar-chart me-1"></i>${h.resultCount} kết quả
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex gap-2">
                                <button class="btn btn-primary btn-sm btn-search-again" 
                                        data-query="${h.searchQuery}"
                                        title="Tìm lại">
                                    <i class="bi bi-arrow-repeat me-1"></i>Tìm lại
                                </button>
                                <button class="btn btn-outline-danger btn-sm btn-delete" 
                                        data-id="${h.searchHistoryId}"
                                        title="Xóa">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        });
        html += '</div>';
        
        $('#historyContainer').html(html);

        // Render pagination
        renderPagination(data);
    }

    // Render pagination using shared function from site.js
    function renderPagination(data) {
        const totalPages = data.totalPages || 0;
        
        if (totalPages <= 1) {
            $('#paginationContainer').hide();
            return;
        }

        $('#paginationContainer').show();
        
        // Use global renderPagination function from site.js
        window.renderPagination('#pagination', totalPages, currentPage, function(page) {
            loadHistory(page);
        });
    }

    // Event handlers
    
    // Search again functionality
    $(document).on('click', '.btn-search-again', function() {
        const query = $(this).data('query');
        console.log('Search again clicked:', query);
        
        // Build search URL based on query content
        if (query) {
            // If query contains specific patterns, extract the search type
            if (query.includes('tác giả:')) {
                // Author search
                const author = query.replace('tác giả:', '').trim();
                window.location.href = `/?author=${encodeURIComponent(author)}`;
            } else if (query.includes('thể loại:')) {
                // Category search  
                const category = query.replace('thể loại:', '').trim();
                window.location.href = `/?category=${encodeURIComponent(category)}`;
            } else if (query.includes('năm:')) {
                // Year search
                const year = query.replace('năm:', '').trim();
                window.location.href = `/?year=${encodeURIComponent(year)}`;
            } else {
                // General title search
                window.location.href = `/?title=${encodeURIComponent(query)}`;
            }
        }
    });

    // Delete single history
    $(document).on('click', '.btn-delete', function () {
        const id = $(this).data('id');
        const $item = $(this).closest('.history-item').parent();
        
        if (!confirm('Bạn có chắc chắn muốn xóa lịch sử này?')) return;
        
        $.post('/SearchHistory?handler=AjaxDelete', { id })
            .done(function (res) {
                if (res.success) {
                    showToast('Đã xóa lịch sử thành công', 'success');
                    $item.fadeOut(() => {
                        loadHistory(currentPage);
                    });
                } else {
                    showToast('Không thể xóa lịch sử', 'error');
                }
            })
            .fail(() => showToast('Lỗi khi xóa lịch sử', 'error'));
    });

    // Delete all histories
    $('#btnDeleteAll').on('click', function () {
        if (!confirm('Bạn có chắc chắn muốn xóa toàn bộ lịch sử tìm kiếm?')) return;
        
        const $btn = $(this);
        $btn.prop('disabled', true).html('<i class="bi bi-hourglass-split me-1"></i>Đang xóa...');
        
        $.post('/SearchHistory?handler=AjaxDeleteAll')
            .done(function (res) {
                if (res.success) {
                    showToast('Đã xóa toàn bộ lịch sử thành công', 'success');
                    $('#historyContainer').hide();
                    $('#emptyState').show();
                    $('#paginationContainer').hide();
                } else {
                    showToast('Không thể xóa lịch sử', 'error');
                }
            })
            .fail(() => showToast('Lỗi khi xóa lịch sử', 'error'))
            .always(() => {
                $btn.prop('disabled', false).html('<i class="bi bi-trash me-1"></i>Xóa tất cả');
            });
    });

    // Initialize
    loadHistory(1);

    // Check for initial page from URL
    const initialPage = @(ViewData["InitialPage"] ?? 1);
    if (initialPage > 1) {
        loadHistory(initialPage);
    } else {
        loadHistory(1);
    }
});
</script>

<style>
.history-item {
    transition: all 0.2s ease;
    background: #fff;
}

.history-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0,0,0,0.1) !important;
}

.hover-shadow {
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
}

.search-icon {
    padding: 8px;
    background: rgba(var(--bs-primary-rgb), 0.1);
    border-radius: 50%;
    width: 45px;
    height: 45px;
    display: flex;
    align-items: center;
    justify-content: center;
}
</style>
}